{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
            "defaultValue": "contosoadmin",
            "metadata": {
                "description": "The account name to use for the database server administrator (high-privileged)."
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Imm3rs!on99",
            "metadata": {
                "description": "The password to use for the database server administrator."
            }
        },
        "applicationLogin": {
            "type": "string",
            "defaultValue": "contosoadmin",
            "metadata": {
                "description": "The account name to use for the application's connections to the database server (low-privileged)."
            }
        },
        "applicationLoginPassword": {
            "type": "securestring",
            "defaultValue": "Imm3rs!on99",
            "metadata": {
                "description": "The password to use for the application's connections to the database server."
            }
        },
        "siteName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Website Name"
    		}
    	},
        "location": {
            "type": "string",
            "allowedValues": [
                "West US",
                "East US",
                "Central US",
                "North Europe"
            ],
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure region in which these resources will be deployed."
            }
        },
    	"userObjectID": {
    		"type": "string",
    		"metadata": { 
    		"description": "The user's ID within Azure Active Directory- necessary for AKV integration. Get via powershell command Get-AzureRmADUser " 
    		}
    	},
    	"ApplicationObjectId": {
    		"type": "string",
    		"metadata": { 
    		"description": "The application's ID within Azure Active Directory- necessary for AKV integration" 
    		}
    	},
    	"ClientId":{
    		"type": "string",
    		"metadata": {
    		"description": "The application ID within AAD; See the Generate Application ID and Secret Step in the readme"
    		}
    	},
    	"ActiveDirectoryAppSecret": {
    		"type": "securestring",
    		"metadata": {
    		"description":  "The application's secret to allow access to AKV"
    	  }
    	},
    	"tenantId": {
    		"type": "string",
    		"metadata": {
    		"description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
    		}
    	},
        "webDeployPackageUri": {
            "type": "string",
            "metadata": {
    		"description": "Location of the web deploy package."
    		}
        },
        "externalIpAddress": {
            "type": "string",
            "defaultValue": "0.0.0.0",
            "metadata": {
    		"description": "External IP address of the machine which ran the predeployment script."
    		}
        }
    },
    "variables": {
        "defaultSqlServerName": "[concat('contososerv', uniqueString(resourceGroup().id))]",
        "defaultSqlDatabaseName": "Store",
        "defaultSqlDatabaseCollation": "SQL_Latin1_General_CP1_CI_AS",
        "defaultSqlDatabaseEdition": "Standard",
        "defaultSqlDatabaseSLO": "S1",
        "defaultSqlDatabaseMaxSizeBytes": "1073741824",
        "defaultStorageAccountName": "[concat('contosostor', uniqueString(resourceGroup().id))]",
        "defaultStorageAccountType": "Standard_LRS",
        "defaultAppServicePlanName": "[concat('contosoplan', uniqueString(resourceGroup().id))]",
        "defaultAppServicePlanSku": "Basic",
        "defaultAppServicePlanWorkerSize": "0",
    	"defaultKeyVaultName": "[concat('contosoakv', uniqueString(resourceGroup().id))]",
    	"skuName": "Standard",
    	"enableVaultForVolumeEncryption": false,
    	"enableVaultForDeployment": false,
    	"enableVaultforTemplateDeployment": true,
    	"appKeysPermissions": ["get", "wrapkey", "unwrapkey", "sign", "verify"],
    	"appSecretPermissions": ["list", "get" ],
    	"userKeysPermissions": ["create", "get", "wrapkey", "unwrapkey", "sign", "verify"], 
    	"userSecretPermissions": ["list", "get"]
    },
    "resources": [
        {
            "name": "[variables('defaultSqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "apiVersion": "2014-04-01-preview",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
          "resources": [
    			{
    			  "apiVersion": "2014-04-01-preview",
    			  "dependsOn": [
    				"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))]"
    			  ],
    			  "location": "[parameters('location')]",
    			  "name": "AllowAllAzureIps",
    			  "properties": {
    				"endIpAddress": "0.0.0.0",
    				"startIpAddress": "0.0.0.0"
    			  },
    			  "type": "firewallrules"
    			},
                {
    			  "apiVersion": "2014-04-01-preview",
    			  "dependsOn": [
    				"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))]"
    			  ],
    			  "location": "[parameters('location')]",
    			  "name": "AllowLocalMachine",
    			  "properties": {
    				"endIpAddress": "[parameters('externalIpAddress')]",
    				"startIpAddress": "[parameters('externalIpAddress')]"
    			  },
    			  "type": "firewallrules"
    			},
    			{
    			  "name": "[variables('defaultSqlDatabaseName')]",
    			  "type": "databases",
    			  "location": "[parameters('location')]",
    			  "apiVersion": "2014-04-01-preview",
    			  "dependsOn": [
    				"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))]"
    			  ],
    			  "properties": {
    				"edition": "[variables('defaultSqlDatabaseEdition')]",
    				"collation": "[variables('defaultSqlDatabaseCollation')]",
    				"maxSizeBytes": "[variables('defaultSqlDatabaseMaxSizeBytes')]",
    				"requestedServiceObjectiveName": "[variables('defaultSqlDatabaseSLO')]"
    			  },
    			  "resources": [
    				{
    				  "apiVersion": "2014-04-01-preview",
    				  "type": "auditingPolicies",
    				  "dependsOn": [
    					"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'), '/databases/',variables('defaultSqlDatabaseName'))]"
    				  ],
    				  "name": "Default",
    				  "properties": {
    					"auditingState": "Enabled",
    					"storageAccountName": "[variables('defaultStorageAccountName')]",
    					"storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('defaultStorageAccountName')), '2015-05-01-preview').key1]",
    					"storageAccountResourceGroupName": "[resourceGroup().name]",
    					"storageAccountSubscriptionId": "[subscription().subscriptionId]",
    					"eventTypesToAudit": "Login_Failure,Login_Success,ParameterizedSQL_Failure,ParameterizedSQL_Success,PlainSQL_Failure,PlainSQL_Success,StoredProcedure_Failure,StoredProcedure_Success,TransactionManagement_Failure,TransactionManagement_Success"
    					}
    				},
    				{
    				  "apiVersion": "2014-04-01-preview",
    				  "type": "securityAlertPolicies",
    				  "name": "Default",
    				  "dependsOn": [
    					"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'), '/databases/',variables('defaultSqlDatabaseName'))]",
    					"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'), '/databases/',variables('defaultSqlDatabaseName'),'/auditingPolicies/Default')]"
    				  ],
    				  "properties": {
    					  "state": "Enabled",
    					  "disabledAlerts": "",
    					  "emailAddresses": "",
    					  "emailAccountAdmins": "true"
    				  }
    				}]
    			}
    		]
    	},
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('defaultStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('defaultStorageAccountType')]"
            }
        },
    	{
    	  "type": "Microsoft.KeyVault/vaults",
          "comments": "Key vault access policies are configured in post-deploy steps",
    	  "name": "[variables('defaultKeyVaultName')]",
    	  "apiVersion": "2015-06-01",
    	  "location": "[parameters('location')]",
    	  "properties": {
    		"enabledForDeployment": "[variables('enableVaultForDeployment')]",
    		"enabledForTemplateDeployment": "[variables('enableVaultforTemplateDeployment')]",
    		"enabledForVolumeEncryption": "[variables('enableVaultForVolumeEncryption')]",
    		"tenantId": "[parameters('tenantId')]",
    		],
    		"sku": {
    		  "name": "[variables('skuName')]",
    		  "family": "A"
    		}
    	  }
    	},
        {
            "apiVersion": "2014-06-01",
            "name": "[variables('defaultAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('defaultAppServicePlanName')]",
                "sku": "[variables('defaultAppServicePlanSku')]",
                "workerSize": "[variables('defaultAppServicePlanWorkerSize')]",
                "numberOfWorkers": 1
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[parameters('siteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('defaultAppServicePlanName'))]",
    			"[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))]",
                "[concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'), '/databases/', variables('defaultSqlDatabaseName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('defaultAppServicePlanName'))]": "empty"
            },
            "properties": {
                "name": "[parameters('siteName')]",
                "serverFarmId": "[variables('defaultAppServicePlanName')]",
    			"siteConfig": {
                   "AlwaysOn": true
               }
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "MSDeploy",
                    "type": "extensions",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
                    ],
                    "properties": {
                        "packageUri": "[parameters('webDeployPackageUri')]",
                        "connectionString": "",
                        "dbType": ""
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
                    ],
                    "properties": {
                        "administratorLogin": "[parameters('administratorLogin')]",
                        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                        "applicationLogin": "[parameters('applicationLogin')]",
                        "applicationLoginPassword": "[parameters('applicationLoginPassword')]",
    					"applicationADID": "[parameters('ClientId')]",
    					"applicationADSecret": "[parameters('ActiveDirectoryAppSecret')]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "type": "config",
                    "name": "connectionstrings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
                    ],
                    "properties": {
                        "DefaultConnection": {
                            "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('defaultSqlDatabaseName'), ';User Id=', parameters('applicationLogin'), '@', variables('defaultSqlServerName'), ';Password=', parameters('applicationLoginPassword'), ';Column Encryption Setting=Enabled;Connection Timeout=30;')]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "sqlServerName": {
            "type": "string",
            "value": "[concat(reference(concat('Microsoft.Sql/servers/', variables('defaultSqlServerName'))).fullyQualifiedDomainName, ',1433')]"
        },
        "sqlServerDbName": {
            "type": "string",
            "value": "[variables('defaultSqlDatabaseName')]"
        },
        "username": {
            "type": "string",
            "value": "[concat(parameters('applicationLogin'), '@', variables('defaultSqlServerName'))]"
        },
        "password": {
            "type": "string",
            "value": "[parameters('applicationLoginPassword')]"
        }
        "region": {
            "type": "string",
            "value": "[parameters('location')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('defaultKeyVaultName')]"
        },
        "siteName": {
            "type": "string",
            "value": "[parameters('siteName')]"
        }
    }
}
